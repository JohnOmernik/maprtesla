#####################
# MapR Setup
# This file should be copied to env.list and then updated to reflect the mapr cluster you are connecting to. 
####################

#####################################################
# This is the base image used. We will pull this down and we will use this as the FROM image
export MAPR_PACC_IMG="maprtech/pacc:6.1.0_6.0.0_ubuntu16"

# Either use maprcli (standard) or provide a path to your own (You probably don't need to change this)
#export MAPRCLI="/home/zetaadm/homecluster/zetago/zeta fs mapr maprcli -U=mapr"
export MAPRCLI="maprcli"

#####################################################
# MapR Cluster info

# MAPR_CLUSTER is the cluster name 
export MAPR_CLUSTER=mycluster

# MAPR_CLDB_HOSTS is the list of CLDBs comma sep. If you need a different port use colons i.e. host1:7222,host2:7222
export MAPR_CLDB_HOSTS=cldb.lab.local

# Home directory in the contain for mapr. This should not need to be changed
export MAPR_HOME=/opt/mapr

# MapR FS Posix mounting path. This is the base inside the container, your MapR-FS will be at $MAPR_MOUNT_PATH/$MAPR_CLUSTER inside the container
export MAPR_MOUNT_PATH=/mapr

# Timezone of your cluster
export MAPR_TZ=US/Central

###################################################
# Include LDAP Info 
#
# For some folks, including some basic LDAP info could be helpful. If you are not sure, you don't need to include this.  This 100% optional
#

# This is list of users (space delimited) of users to add to the container "
# This adds the users to root, disk, and adm groups in the container. 
# It's for admin users that may not be part of LDAP installs
# The format is UNAME:UID UNAME:UID 
# To add two users, user1 with UID 1500 and user2 with UID 1501 the format would be:
# export MAPR_USER_LIST="user1:1500 user2:1501"
export MAPR_USER_LIST=""


# MAPR_INCLUDE_LDAP set to 1 to include the LDAP Information
export MAPR_INCLUDE_LDAP="0"

# The following only work if MAPR_INCLUDE_LDAP is set to 1

# The LDAP Base CN
export MAPR_LDAP_BASE="dc=mydomain,dc=com"
# The LDAP URL 
export MAPR_LDAP_URL="ldap://myldapserver.mydomain.com"

# The user and password for a readonly user to do lookups
export MAPR_LDAP_RO_USER="cn=readonly,dc=mydomain,dc=com"
export MAPR_LDAP_RO_PASS="readonly"

#####################################################
# This is the location in MapR FS where the git repo is cloned and we will use as an application home directory
#
# Ensure the MAPR_CONTAINER_USER has access to this!
#
# APP_HOME is the HDFS location (no /mapr/mycluster) we then make APP_HOME_POSIX frmo the MAPR_MOUNT_PATH and MAPR_CLUSTER

export APP_HOME="/apps/prod/path/to/your/app"

export APP_HOME_POSIX="${MAPR_MOUNT_PATH}/${MAPR_CLUSTER}${APP_HOME}"


#####################################################
# User information for setting up inside the container
# MAPR_CONTAINER_USER must also exist on the docker host. Or at the very least, MAPR_CONTAINER_UID can NOT be used by anything. This is so we set permissions on the conf files

export MAPR_CONTAINER_USER=mycontaineruser
export MAPR_CONTAINER_PASSWORD=
export MAPR_CONTAINER_GROUP=mycontainergroup
export MAPR_CONTAINER_UID=12345
export MAPR_CONTAINER_GID=12345

#####################################################
# MAPR Secure Cluster Ticket Info
#
# For secure clusters, there needs to be a MapR Ticket Follow these steps 
#
# 1. Place the ticket in a directory on the host running the contianer and update MAPR_TICKET_HOST_LOCATION
# 2. Update MAPR_TICKET_FILE_NAME with the name of the ticket
# 3. (Optional) if you want the ticket location to be different inside the contianer, please update MAPR_TICKET_CONTAINER_LOCATION (this is NOT needed)

export MAPR_TICKET_HOST_LOCATION="${APP_HOME_POSIX}/maprticket"
export MAPR_TICKET_CONTAINER_LOCATION="/tmp/mapr_ticket"

export MAPR_TICKET_FILENAME="maprticket"
export MAPR_TICKETFILE_LOCATION="${MAPR_TICKET_CONTAINER_LOCATION}/${MAPR_TICKET_FILENAME}"

# For non-secure clusters, simplely uncomment this line
# export MAPR_TICKETFILE_LOCATION=""


#####################################################

# Output image name after building.sh script. 

export APP_IMG="maprpaccstreams:6.1.0"
export APP_GIT_USER="johnomernik"
export APP_GIT_REPO="maprpaccstreams"

#####################################################


# Ensure that the user has the ability right to the stream here. Use the mkstream.sh to create the stream for your user

export MAPR_STREAMS_VOLUME_LOCATION="/apps/prod/tesladata/eventstream"
export MAPR_STREAMS_VOLUME_NAME="prod.apps.tesladata"
export MAPR_STREAMS_DEFAULT_PARTITIONS=3
export MAPR_STREAMS_DEFAULT_TTL="345600"   # This is 4 days of TTL Down from the standard MapR TTL of 7 days for Streams (This is in seconds)
export MAPR_STREAMS_STREAM_LOCATION="/apps/prod/tesladata/eventstream/teslastream"
export MAPR_STREAMS_TESLA_FULL_TOPIC="teslafull"
export MAPR_STREAMS_TESLA_STREAM_TOPIC="teslastream"

export MAPR_STREAMS_TOPICS="${MAPR_STREAMS_TESLA_FULL_TOPIC} ${MAPR_STREAMS_TESLA_STREAM_TOPIC}"


# App specific information
export APP_TESLA_CARNAME="MyTesla"
export APP_TESLA_REFRESH_SECS="50000"
export APP_TESLA_STDOUT_INTERVAL="1800"
export APP_TESLA_FULL_DATA_SECS="120"
export APP_TESLA_HTTP_TIMEOUT_SECS="30"
export APP_TESLA_TOKEN_FILE="/zeta/brewpot/apps/prod/tesladata/maprtesla/safe/token"
export APP_TESLA_CREDS_FILE="/zeta/brewpot/apps/prod/tesladata/maprtesla/safe/creds"


#####################################################
#
# Application ENV Variables
# 
# These variables are not used directly by the MapR PACC, but are used by the application itself. 
# 


export APP_CMD="/bin/bash"
